server:
  port: '8082'

spring:
  application:
    name: user-service
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: user-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

    properties:
      spring.json.trusted.packages: '*'

  datasource:
    url: jdbc:postgresql://localhost:5432/users
    username: admin
    password: secret
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  data:
    mongodb:
      uri: mongodb://admin:secret@localhost:27017/user_media

minio:
  bucket:
    name: users
  url: http://localhost:9000
  root-user: admin
  root-password: secret123

eureka:
  instance:
    hostname: localhost
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:8095/eureka/