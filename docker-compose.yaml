services:
  eureka-server:
    image: ghcr.io/fl1s/fablewhirl/eureka-server:latest
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    networks:
      - "fablewhirl-network"

  api-gateway:
    image: ghcr.io/fl1s/fablewhirl/api-gateway:latest
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    env_file:
      - api-gateway/.env.prod
    depends_on:
      - eureka-server
    networks:
      - "fablewhirl-network"

  auth-service:
    image: ghcr.io/fl1s/fablewhirl/auth-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    env_file:
      - auth-service/.env.prod
    depends_on:
      - eureka-server
    networks:
      - "fablewhirl-network"

  user-service:
    image: ghcr.io/fl1s/fablewhirl/user-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    env_file:
      - user-service/.env.prod
    depends_on:
      - eureka-server
    networks:
      - "fablewhirl-network"

  character-service:
    image: ghcr.io/fl1s/fablewhirl/character-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    env_file:
      - character-service/.env.prod
    depends_on:
      - eureka-server
    networks:
      - "fablewhirl-network"

  thread-service:
    image: ghcr.io/fl1s/fablewhirl/thread-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    env_file:
      - thread-service/.env.prod
    depends_on:
      - eureka-server
    networks:
      - "fablewhirl-network"

  comment-service:
    image: ghcr.io/fl1s/fablewhirl/comment-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    env_file:
      - comment-service/.env.prod
    depends_on:
      - eureka-server
    networks:
      - "fablewhirl-network"

  vault:
    image: hashicorp/vault:latest
    container_name: vault-dev
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
    cap_add:
      - IPC_LOCK
    volumes:
      - vault-data:/vault/file

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_LISTENER_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    restart: on-failure
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
    depends_on:
      - zookeeper

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: secret123
    volumes:
      - ~/minio/data:/data
    command: server --console-address :9001 /data

  postgres:
    image: postgres:latest
    container_name: user-info
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=users
    ports:
      - "5432:5432"
    restart: unless-stopped

  mongo:
    image: mongo:latest
    container_name: fablewhirl-mongo
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=secret
    ports:
      - "27017:27017"
    restart: unless-stopped

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.1.0
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=secret
    ports:
      - "8443:8443"
    command: [ "start-dev", "--http-port=8443" ]

  redis:
    image: redis:latest
    container_name: redis
    volumes:
      - redis_data:/data/cache
    ports:
      - "6379:6379"
    command: [ "redis-server"]

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    links:
      - prometheus:prometheus
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_USER: "admin"
      GF_SECURITY_ADMIN_PASSWORD: "secret"
    networks:
      - monitoring

volumes:
  vault-data:
    driver: local
  mongo_data:
    driver: local
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  fablewhirl-network:
    driver: bridge
  monitoring:
    driver: bridge
