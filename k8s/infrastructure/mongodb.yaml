apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
  namespace: fablewhirl
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-creds
  namespace: fablewhirl
type: Opaque
stringData:
  username: "admin"
  password: "secret"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-initdb
  namespace: fablewhirl
data:
  init-collections.js: |
    print('Starting initialization of microservices database');
    db = db.getSiblingDB('character-data');
    db.createCollection('characters');
    db.characters.insertOne({initialized: true});
    print('character-data database initialized');
    
    db = db.getSiblingDB('comment-data');
    db.createCollection('comments');
    db.comments.insertOne({initialized: true});
    print('comment-data database initialized');
    
    db = db.getSiblingDB('thread-data');
    db.createCollection('threads');
    db.threads.insertOne({initialized: true});
    print('thread-data database initialized');
    
    db = db.getSiblingDB('user-media');
    db.createCollection('users');
    db.users.insertOne({initialized: true});
    print('user-media database initialized');
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: fablewhirl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:latest
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-creds
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-creds
                  key: password
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
            - name: mongodb-initdb
              mountPath: /docker-entrypoint-initdb.d
          readinessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 6
      volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb-pvc
        - name: mongodb-initdb
          configMap:
            name: mongodb-initdb
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: fablewhirl
spec:
  selector:
    app: mongodb
  ports:
    - port: 27017
      targetPort: 27017
  type: ClusterIP